version: '3.9'

services:
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - ./portainer/etc/localtime:/etc/localtime:ro
      - ./portainer/var/run/docker.sock:/var/run/docker.sock:ro
      - ./portainer/data:/data
    ports:
      - 9000:9000
    networks:
      - home-network

  pihole:
    image: pihole/pihole:latest
    container_name: pihole
    restart: unless-stopped
    volumes:
      - ./pihole/etc:/etc/pihole
      - ./pihole/dnsmasq.d:/etc/dnsmasq.d
    env_file:
      - ./pihole/.env
    ports:
      - 53:53/tcp
      - 53:53/udp
      - 67:67/udp
      - 80:80/tcp
    cap_add:
      - NET_ADMIN

  dashy:
    image: lissy93/dashy:latest
    container_name: dashy
    restart: unless-stopped
    volumes:
      - ./dashy/conf.yml:/app/public/conf.yml
    env_file:
      - ./dashy/.env
    ports:
      - 4000:80
    networks:
      - home-network
    healthcheck:
      test: ['CMD', 'node', '/app/services/healthcheck']
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
  
  node-red:
    image: nodered/node-red:latest
    container_name: node-red
    restart: unless-stopped
    env_file:
      - ./dashy/.env
    volumes:
      - ./node-red/data:/data
    ports:
      - 1880:1880
    networks:
      - home-network
  
  influxdb:
    image: influxdb:alpine
    container_name: influxdb
    restart: always
    volumes:
      - ./influxdb/data:/var/lib/influxdb2
      - ./influxdb/config:/etc/influxdb2
    env_file:
      - ./influxdb/.env
    ports:
      - '8086:8086'
    networks:
      - home-network 
  
  telegraf:
    image: telegraf:alpine
    container_name: telegraf
    restart: always
    volumes:
    - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
    depends_on:
      - influxdb
    links:
      - influxdb
    ports:
    - '8125:8125'
    networks:
      - home-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    volumes:
      - ./grafana/data:/var/lib/grafana
    depends_on:
      - influxdb
    env_file:
      - ./grafana/.env
    links:
      - influxdb
    ports:
      - '3000:3000'
    networks:
      - home-network

  rabbitmq:
    image: rabbitmq:management-alpine
    container_name: rabbitmq
    volumes:
        - ./rabbitmq/data/:/var/lib/rabbitmq/
        - ./rabbitmq/log/:/var/log/rabbitmq
    env_file:
      - ./rabbitmq/.env
    ports:
        - 5672:5672
        - 15672:15672
    networks:
        - home-network

networks:
  home-network:
    driver: bridge
    